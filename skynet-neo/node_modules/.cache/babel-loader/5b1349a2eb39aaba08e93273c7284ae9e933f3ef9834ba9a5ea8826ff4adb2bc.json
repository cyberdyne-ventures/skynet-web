{"ast":null,"code":"var _jsxFileName = \"/Users/anirudh/Documents/Cyberdyne Ventures/skynet-web/skynet-neo/src/pages/Dashboard/View3.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { processNodesAndEdges } from './graphUtils';\nimport ForceGraph from \"../../components/NetworkGraph/NetworkGraph\";\nimport DetailList from \"../../components/DetailList/DetailList\";\nimport { useGetEntityListData } from \"../../hooks/useGetEntityList/useGetEntityListData\";\nimport { useGetEntityDetailData } from \"../../hooks/useGetEntityDetail/useGetEntityDetailData\";\nimport { useGetEntityDetailTextData } from \"../../hooks/useGetEntityDetailText/useGetEntityDetailTextData\";\nimport { useSearchParams, useLocation, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function View3() {\n  _s();\n  var _network$nodes, _network$links;\n  const [graphData, setGraphData] = useState();\n  const [graphMode, setGraphMode] = useState(true);\n  const [network, setNetwork] = useState({});\n  const [searchParams] = useSearchParams();\n  const entityName = searchParams.get('entity');\n  const [entityList, setEntityList] = useState([]);\n  const [alertList, setAlertList] = useState([]);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    getEntityList\n  } = useGetEntityListData();\n  const {\n    getEntityDetail\n  } = useGetEntityDetailData();\n  const {\n    getEntityDetailText\n  } = useGetEntityDetailTextData();\n  useEffect(() => {\n    getEntityList().then(entityList => {\n      setEntityList(entityList);\n    });\n    if (entityName) {\n      getEntityDetail(entityName).then(result => {\n        var _result$results$pop$d, _result$results$pop;\n        const graphData = (_result$results$pop$d = result === null || result === void 0 ? void 0 : (_result$results$pop = result.results.pop()) === null || _result$results$pop === void 0 ? void 0 : _result$results$pop.data) !== null && _result$results$pop$d !== void 0 ? _result$results$pop$d : [];\n        setGraphData({\n          results: graphData\n        });\n      });\n      getEntityDetailText(entityName).then(alertList => {\n        setAlertList(alertList);\n      });\n    }\n  }, [entityName]);\n  useEffect(() => {\n    setNetwork(processNodesAndEdges(graphData));\n  }, [graphData]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        marginLeft: 16\n      },\n      children: ['Select Entity', \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"select\", {\n        style: {\n          padding: '8px 16px'\n        },\n        defaultValue: entityName !== null && entityName !== void 0 ? entityName : '',\n        onChange: event => {\n          searchParams.set('entity', event.target.value);\n          navigate({\n            pathname: location.pathname,\n            search: searchParams.toString()\n          }, {\n            replace: true\n          });\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          disabled: true,\n          value: '',\n          children: \" -- select an entity -- \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), entityList.map((entity, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: entity.entity,\n          children: [entity.entity_type, \"/\", entity.entity]\n        }, `select-${index}-${entity.entity}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 47\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '0 16px',\n        display: 'flex',\n        gap: 16\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setGraphMode(true),\n        children: 'Graph'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setGraphMode(false),\n        children: 'List'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: '#1f1f1f',\n        height: '90vh',\n        width: '97%',\n        margin: '16px'\n      },\n      children: [graphMode && /*#__PURE__*/_jsxDEV(ForceGraph, {\n        nodes: (_network$nodes = network.nodes) !== null && _network$nodes !== void 0 ? _network$nodes : [],\n        links: (_network$links = network.links) !== null && _network$links !== void 0 ? _network$links : [],\n        width: \"100%\",\n        height: \"90vh\",\n        strength: -1000,\n        labelNodeTypes: ['ENTITY', 'NAME_CLUSTER', 'ALERT']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 23\n      }, this), !graphMode && /*#__PURE__*/_jsxDEV(DetailList, {\n        data: alertList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(View3, \"SHpCBaIDJkf6HjIE9Ns5Jost85Y=\", false, function () {\n  return [useSearchParams, useNavigate, useLocation, useGetEntityListData, useGetEntityDetailData, useGetEntityDetailTextData];\n});\n_c = View3;\nvar _c;\n$RefreshReg$(_c, \"View3\");","map":{"version":3,"names":["useEffect","useState","processNodesAndEdges","ForceGraph","DetailList","useGetEntityListData","useGetEntityDetailData","useGetEntityDetailTextData","useSearchParams","useLocation","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","View3","_s","_network$nodes","_network$links","graphData","setGraphData","graphMode","setGraphMode","network","setNetwork","searchParams","entityName","get","entityList","setEntityList","alertList","setAlertList","navigate","location","getEntityList","getEntityDetail","getEntityDetailText","then","result","_result$results$pop$d","_result$results$pop","results","pop","data","children","style","marginLeft","padding","defaultValue","onChange","event","set","target","value","pathname","search","toString","replace","disabled","fileName","_jsxFileName","lineNumber","columnNumber","map","entity","index","entity_type","display","gap","onClick","backgroundColor","height","width","margin","nodes","links","strength","labelNodeTypes","_c","$RefreshReg$"],"sources":["/Users/anirudh/Documents/Cyberdyne Ventures/skynet-web/skynet-neo/src/pages/Dashboard/View3.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { IGraphData, processNodesAndEdges } from './graphUtils';\nimport ForceGraph from \"../../components/NetworkGraph/NetworkGraph\";\nimport DetailList from \"../../components/DetailList/DetailList\";\nimport { useGetEntityListData } from \"../../hooks/useGetEntityList/useGetEntityListData\"\nimport { useGetEntityDetailData } from \"../../hooks/useGetEntityDetail/useGetEntityDetailData\"\nimport { useGetEntityDetailTextData } from \"../../hooks/useGetEntityDetailText/useGetEntityDetailTextData\"\nimport { useSearchParams, useLocation, useNavigate } from \"react-router-dom\";\nimport { AlertNodeData, EntityNodeData, NodeMeta } from \"../../common/types/backend-models\";\n\nexport function View3() {\n  const [graphData, setGraphData] = useState<IGraphData>();\n  const [graphMode, setGraphMode] = useState(true);\n  const [network, setNetwork] = useState<any>({});\n  const [searchParams] = useSearchParams();\n  const entityName = searchParams.get('entity');\n  const [entityList, setEntityList] = useState<(NodeMeta & EntityNodeData)[]>([]);\n  const [alertList, setAlertList] = useState<AlertNodeData[]>([]);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { getEntityList } = useGetEntityListData();\n  const { getEntityDetail } = useGetEntityDetailData();\n  const { getEntityDetailText } = useGetEntityDetailTextData();\n\n  useEffect(() => {\n    getEntityList()\n      .then((entityList) => {\n        setEntityList(entityList);\n      })\n    if (entityName) {\n      getEntityDetail(entityName)\n        .then((result) => {\n          const graphData: any = result?.results.pop()?.data ?? [];\n          setGraphData({ results: graphData });\n        });\n      getEntityDetailText(entityName)\n        .then((alertList) => {\n          setAlertList(alertList)\n        })\n    }\n  }, [entityName]);\n\n  useEffect(() => {\n    setNetwork(processNodesAndEdges(graphData));\n  }, [graphData]);\n\n  return (\n    <>\n      <h3 style={{ marginLeft: 16 }}>{'Select Entity'}&nbsp;&nbsp;\n        <select style={{ padding: '8px 16px' }} defaultValue={entityName ?? ''} onChange={(event) => {\n          searchParams.set('entity', event.target.value);\n          navigate({ pathname: location.pathname, search: searchParams.toString() }, { replace: true });\n        }}>\n          <option disabled value={''}> -- select an entity -- </option>\n          {entityList.map((entity, index) => (<option key={`select-${index}-${entity.entity}`} value={entity.entity}>{entity.entity_type}/{entity.entity}</option>))}\n        </select>\n      </h3>\n      <div style={{ padding: '0 16px', display: 'flex', gap: 16 }}>\n        <button onClick={() => setGraphMode(true)}>{'Graph'}</button>\n        <button onClick={() => setGraphMode(false)}>{'List'}</button>\n      </div>\n      <div style={{ backgroundColor: '#1f1f1f', height: '90vh', width: '97%', margin: '16px' }}>\n        {graphMode && <ForceGraph\n          nodes={network.nodes ?? []}\n          links={network.links ?? []}\n          width={\"100%\"}\n          height={\"90vh\"}\n          strength={-1000}\n          labelNodeTypes={['ENTITY', 'NAME_CLUSTER', 'ALERT']}\n        />}\n        {!graphMode && <DetailList data={alertList} />}\n      </div>\n    </>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}