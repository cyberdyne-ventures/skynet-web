{"ast":null,"code":"import axios from 'axios';\nexport function useGetEntityListData() {\n  const getEntityList = async () => {\n    const entityResponse = await axios.post(`${process.env.REACT_APP_DB_URL}/tx/commit`, JSON.stringify({\n      statements: [{\n        statement: `MATCH (n:ENTITY) where n.view = 1 return n`\n      }]\n    }), {\n      headers: {\n        Authorization: `Basic ${btoa(`${process.env.REACT_APP_USERNAME}:${process.env.REACT_APP_PASSWORD}`)}`,\n        Accept: 'application/json;charset=UTF-8',\n        'Content-Type': 'application/json'\n      }\n    });\n    const entityList = entityResponse.data.results.reduce((resultList, currentResult) => {\n      resultList.push(...currentResult.data.map(result => ({\n        ...result.row[0],\n        ...result.meta[0]\n      })));\n      return resultList;\n    }, []);\n    return entityList;\n  };\n  return {\n    getEntityList\n  };\n}","map":{"version":3,"names":["axios","useGetEntityListData","getEntityList","entityResponse","post","process","env","REACT_APP_DB_URL","JSON","stringify","statements","statement","headers","Authorization","btoa","REACT_APP_USERNAME","REACT_APP_PASSWORD","Accept","entityList","data","results","reduce","resultList","currentResult","push","map","result","row","meta"],"sources":["/Users/anirudh/Documents/Cyberdyne Ventures/skynet-web/src/hooks/useGetEntityList/useGetEntityListData.ts"],"sourcesContent":["import axios from 'axios';\r\nimport { DataListResponse, NodeMeta, EntityNodeData } from '../../common/types/backend-models.d';\r\n\r\nexport function useGetEntityListData() {\r\n  const getEntityList = async () => {\r\n    const entityResponse = await axios.post<DataListResponse<EntityNodeData>>(`${process.env.REACT_APP_DB_URL}/tx/commit`, JSON.stringify({\r\n      statements: [\r\n        {\r\n          statement: `MATCH (n:ENTITY) where n.view = 1 return n`,\r\n        },\r\n      ],\r\n    }), {\r\n      headers: {\r\n        Authorization: `Basic ${btoa(`${process.env.REACT_APP_USERNAME}:${process.env.REACT_APP_PASSWORD}`)}`,\r\n        Accept: 'application/json;charset=UTF-8',\r\n        'Content-Type': 'application/json',\r\n      }\r\n    });\r\n\r\n    const entityList = entityResponse.data.results.reduce<(NodeMeta & EntityNodeData)[]>((resultList, currentResult) => {\r\n      resultList.push(...currentResult.data.map((result) => ({ ...result.row[0], ...result.meta[0] })));\r\n      return resultList;\r\n    }, []);\r\n\r\n    return entityList;\r\n  }\r\n\r\n  return {\r\n    getEntityList\r\n  }\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,OAAO,SAASC,oBAAoBA,CAAA,EAAG;EACrC,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,MAAMC,cAAc,GAAG,MAAMH,KAAK,CAACI,IAAI,CAAmC,GAAGC,OAAO,CAACC,GAAG,CAACC,gBAAgB,YAAY,EAAEC,IAAI,CAACC,SAAS,CAAC;MACpIC,UAAU,EAAE,CACV;QACEC,SAAS,EAAE;MACb,CAAC;IAEL,CAAC,CAAC,EAAE;MACFC,OAAO,EAAE;QACPC,aAAa,EAAE,SAASC,IAAI,CAAC,GAAGT,OAAO,CAACC,GAAG,CAACS,kBAAkB,IAAIV,OAAO,CAACC,GAAG,CAACU,kBAAkB,EAAE,CAAC,EAAE;QACrGC,MAAM,EAAE,gCAAgC;QACxC,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IAEF,MAAMC,UAAU,GAAGf,cAAc,CAACgB,IAAI,CAACC,OAAO,CAACC,MAAM,CAAgC,CAACC,UAAU,EAAEC,aAAa,KAAK;MAClHD,UAAU,CAACE,IAAI,CAAC,GAAGD,aAAa,CAACJ,IAAI,CAACM,GAAG,CAAEC,MAAM,KAAM;QAAE,GAAGA,MAAM,CAACC,GAAG,CAAC,CAAC,CAAC;QAAE,GAAGD,MAAM,CAACE,IAAI,CAAC,CAAC;MAAE,CAAC,CAAC,CAAC,CAAC;MACjG,OAAON,UAAU;IACnB,CAAC,EAAE,EAAE,CAAC;IAEN,OAAOJ,UAAU;EACnB,CAAC;EAED,OAAO;IACLhB;EACF,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}