{"ast":null,"code":"var _jsxFileName = \"/Users/anirudh/Documents/Cyberdyne Ventures/skynet-web/skynet-neo/src/pages/Dashboard/Experimental/View4.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { processNodesAndEdges } from '../graphUtils';\nimport ForceGraph from \"../../../components/NetworkGraph/NetworkGraph\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function View4() {\n  _s();\n  var _network$nodes, _network$links;\n  const [graphData, setGraphData] = useState();\n  const [network, setNetwork] = useState({});\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_DB_URL}/tx/commit`, {\n      method: \"POST\",\n      headers: {\n        Authorization: `Basic ${btoa(`${process.env.REACT_APP_USERNAME}:${process.env.REACT_APP_PASSWORD}`)}`,\n        Accept: 'application/json;charset=UTF-8',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        statements: [{\n          statement: `MATCH (n:ENTITY {view: 1})-[r]->(m {view: 1})\n                        WITH n, count(r) AS count_of_first_layer_nodes\n                        WHERE count_of_first_layer_nodes > 4\n                        MATCH p=(n)-[r*]->(m)\n                        RETURN p`\n        }]\n      })\n    }).then(result => result.json()).then(responseJson => {\n      const graphData = responseJson === null || responseJson === void 0 ? void 0 : responseJson.results.pop().data;\n      setGraphData({\n        results: graphData\n      });\n    });\n  }, []);\n  useEffect(() => {\n    setNetwork(processNodesAndEdges(graphData));\n  }, [graphData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: '#1f1f1f',\n      height: '90vh',\n      width: '97%',\n      margin: '16px'\n    },\n    children: /*#__PURE__*/_jsxDEV(ForceGraph, {\n      nodes: (_network$nodes = network.nodes) !== null && _network$nodes !== void 0 ? _network$nodes : [],\n      links: (_network$links = network.links) !== null && _network$links !== void 0 ? _network$links : [],\n      width: \"100%\",\n      height: \"90vh\",\n      strength: -200\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(View4, \"8HaesLgHxJrzugEyIBFbgK6+Fvc=\");\n_c = View4;\nvar _c;\n$RefreshReg$(_c, \"View4\");","map":{"version":3,"names":["useEffect","useState","processNodesAndEdges","ForceGraph","jsxDEV","_jsxDEV","View4","_s","_network$nodes","_network$links","graphData","setGraphData","network","setNetwork","fetch","process","env","REACT_APP_DB_URL","method","headers","Authorization","btoa","REACT_APP_USERNAME","REACT_APP_PASSWORD","Accept","body","JSON","stringify","statements","statement","then","result","json","responseJson","results","pop","data","style","backgroundColor","height","width","margin","children","nodes","links","strength","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/anirudh/Documents/Cyberdyne Ventures/skynet-web/skynet-neo/src/pages/Dashboard/Experimental/View4.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { IGraphData, processNodesAndEdges } from '../graphUtils';\nimport ForceGraph from \"../../../components/NetworkGraph/NetworkGraph\";\n\nexport function View4() {\n  const [graphData, setGraphData] = useState<IGraphData>();\n  const [network, setNetwork] = useState<any>({});\n\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_DB_URL}/tx/commit`, {\n      method: \"POST\",\n      headers: {\n        Authorization: `Basic ${btoa(`${process.env.REACT_APP_USERNAME}:${process.env.REACT_APP_PASSWORD}`)}`,\n        Accept: 'application/json;charset=UTF-8',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        statements: [\n          {\n            statement: `MATCH (n:ENTITY {view: 1})-[r]->(m {view: 1})\n                        WITH n, count(r) AS count_of_first_layer_nodes\n                        WHERE count_of_first_layer_nodes > 4\n                        MATCH p=(n)-[r*]->(m)\n                        RETURN p`,\n          },\n        ],\n      }),\n    })\n      .then((result) => result.json())\n      .then((responseJson) => {\n        const graphData = responseJson?.results.pop().data;\n        setGraphData({ results: graphData });\n      });\n  }, []);\n\n  useEffect(() => {\n    setNetwork(processNodesAndEdges(graphData));\n  }, [graphData]);\n\n  return (\n    <div style={{ backgroundColor: '#1f1f1f', height: '90vh', width: '97%', margin: '16px' }}>\n      <ForceGraph\n        nodes={network.nodes ?? []}\n        links={network.links ?? []}\n        width={\"100%\"}\n        height={\"90vh\"}\n        strength={-200}\n      />\n    </div>\n  );\n}\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAAqBC,oBAAoB,QAAQ,eAAe;AAChE,OAAOC,UAAU,MAAM,+CAA+C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvE,OAAO,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,cAAA,EAAAC,cAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAa,CAAC;EACxD,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAM,CAAC,CAAC,CAAC;EAE/CD,SAAS,CAAC,MAAM;IACdc,KAAK,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,gBAAgB,YAAY,EAAE;MACjDC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACPC,aAAa,EAAE,SAASC,IAAI,CAAC,GAAGN,OAAO,CAACC,GAAG,CAACM,kBAAkB,IAAIP,OAAO,CAACC,GAAG,CAACO,kBAAkB,EAAE,CAAC,EAAE;QACrGC,MAAM,EAAE,gCAAgC;QACxC,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,UAAU,EAAE,CACV;UACEC,SAAS,EAAE;AACvB;AACA;AACA;AACA;QACU,CAAC;MAEL,CAAC;IACH,CAAC,CAAC,CACCC,IAAI,CAAEC,MAAM,IAAKA,MAAM,CAACC,IAAI,CAAC,CAAC,CAAC,CAC/BF,IAAI,CAAEG,YAAY,IAAK;MACtB,MAAMvB,SAAS,GAAGuB,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEC,OAAO,CAACC,GAAG,CAAC,CAAC,CAACC,IAAI;MAClDzB,YAAY,CAAC;QAAEuB,OAAO,EAAExB;MAAU,CAAC,CAAC;IACtC,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAENV,SAAS,CAAC,MAAM;IACda,UAAU,CAACX,oBAAoB,CAACQ,SAAS,CAAC,CAAC;EAC7C,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;EAEf,oBACEL,OAAA;IAAKgC,KAAK,EAAE;MAAEC,eAAe,EAAE,SAAS;MAAEC,MAAM,EAAE,MAAM;MAAEC,KAAK,EAAE,KAAK;MAAEC,MAAM,EAAE;IAAO,CAAE;IAAAC,QAAA,eACvFrC,OAAA,CAACF,UAAU;MACTwC,KAAK,GAAAnC,cAAA,GAAEI,OAAO,CAAC+B,KAAK,cAAAnC,cAAA,cAAAA,cAAA,GAAI,EAAG;MAC3BoC,KAAK,GAAAnC,cAAA,GAAEG,OAAO,CAACgC,KAAK,cAAAnC,cAAA,cAAAA,cAAA,GAAI,EAAG;MAC3B+B,KAAK,EAAE,MAAO;MACdD,MAAM,EAAE,MAAO;MACfM,QAAQ,EAAE,CAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAC1C,EAAA,CA9CeD,KAAK;AAAA4C,EAAA,GAAL5C,KAAK;AAAA,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}